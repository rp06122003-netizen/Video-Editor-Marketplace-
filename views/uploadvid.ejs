<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Upload Your Video Product</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        /* body {
            min-height: 100vh;
            background: linear-gradient(135deg, #1a1a2e, #16213e);
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 20px;
        } */

        .uvcontainer {

            width: 100%;
            max-width: 1200px;
            /* background: rgba(255, 255, 255, 0.1); */
            /* background: linear-gradient(135deg, #1a1a2e, #16213e); */
            background: linear-gradient(135deg, #1a1a2e48, #16213e3d);
            /* backdrop-filter: blur(10px); */
            padding: 4px 24px;
            /* box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37); */
        }

        .uvcontainer h1 {
            color: black;
            text-align: center;
            margin-bottom: 30px;
            font-size: 2.5rem;
            font-weight: 700;
        }

        .form-content {
            display: flex;
            flex-direction: column;
            gap: 30px;
        }

        @media (min-width: 768px) {
            .form-content {
                flex-direction: row;
            }

            .upload-section {
                flex: 1;
            }

            .details-section {
                flex: 1;
            }
        }

        .upload-area {
            border: 2px dashed rgba(255, 255, 255, 0.3);
            border-radius: 15px;
            padding: 40px 20px;
            text-align: center;
            cursor: pointer;
            margin-bottom: 30px;
            position: relative;
            background: rgba(255, 255, 255, 0.05);
            min-height: 300px;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
        }

        .upload-area:hover {
            border-color: #4f46e5;
            background: rgba(79, 70, 229, 0.1);
        }

        .upload-area.dragover {
            border-color: #4f46e5;
            background: rgba(79, 70, 229, 0.2);
        }

        .upload-icon {
            font-size: 40px;
            color: #4f46e5;
            margin-bottom: 15px;
        }

        .upload-text {
            color: black;
            margin-bottom: 10px;
        }

        .browse-text {
            color: #4f46e5;
            text-decoration: underline;
            cursor: pointer;
        }

        .form-group {
            margin-bottom: 25px;
        }

        .form-label {
            display: block;
            color: black;
            margin-bottom: 8px;
            font-size: 0.9rem;
            font-weight: 500;
        }

        .form-input {
            width: 100%;
            padding: 12px 16px;
            background: rgba(255, 255, 255, 0.05);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: 8px;
            color: black;
            font-size: 1rem;
        }

        .form-input:focus {
            outline: none;
            border-color: #d64215;
            background: rgba(255, 255, 255, 0.1);
        }

        /* select.form-input {
            appearance: none;
            background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='white' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E");
            background-repeat: no-repeat;
            background-position: right 12px center;
            background-size: 16px;
        } */

        textarea.form-input {
            min-height: 120px;
            resize: vertical;
        }

        .tags-input {
            display: flex;
            flex-wrap: wrap;
            gap: 8px;
            padding: 8px;
            min-height: 48px;
        }

        .tag {
            background: rgba(79, 70, 229, 0.3);
            color: black;
            padding: 4px 8px;
            border-radius: 4px;
            display: flex;
            align-items: center;
            gap: 4px;
        }

        .tag-remove {
            cursor: pointer;
        }

        .tag-remove:hover {
            color: black;
        }

        .submit-btn {
            width: 100%;
            padding: 14px;
            background: #d64215;
            color: black;
            border: none;
            border-radius: 8px;
            font-size: 1rem;
            /* font-weight: 600; */
            cursor: pointer;
        }

        .submit-btn:hover {
            background: #d64215b0;
            transform: translateY(-2px);
        }

        .submit-btn:active {
            transform: translateY(0);
        }

        /* @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .container {
            animation: fadeIn 0.6s ease-out;
        } */

        /* Preview section for uploaded video */
        .video-preview {
            width: 100%;
            height: 200px;
            background: rgba(0, 0, 0, 0.2);
            border-radius: 8px;
            margin-top: 20px;
            display: none;
            align-items: center;
            justify-content: center;
            color: black;
        }

        .video-preview.active {
            display: flex;
        }
    </style>
</head>
<body>
    <div class="uvcontainer">
        <h1>New Project</h1>
        <form id="uploadForm">
            <div class="form-content">
                <div class="upload-section">
                    <div class="upload-area" id="dropZone">
                        <div class="upload-icon">üìÅ</div>
                        <p class="upload-text">Drag & drop your video here or</p>
                        <span class="browse-text">click to browse</span>
                        <input type="file" id="fileInput" hidden accept="video/*">
                    </div>
                    <div class="video-preview" id="videoPreview">
                        No video selected
                    </div>
                </div>

                <div class="details-section">
                    <div class="form-group">
                        <label class="form-label" for="title">Video Title</label>
                        <input type="text" id="title" class="form-input" placeholder="Enter a catchy title" required>
                    </div>

                    <div class="form-group">
                        <label class="form-label" for="price">Price (‚Çπ)</label>
                        <input type="number" id="price" class="form-input" placeholder="Set your price" min="0" step="0.01" required>
                    </div>

                    <div class="form-group">
                        <label class="form-label" for="type">Video Type</label>
                        <select id="type" class="form-input" required>
                            <option value="">Select video type</option>
                            <option value="wedding">wedding</option>
                            <option value="commercial">commercial</option>
                            <option value="music">music</option>
                            <option value="corporate">corporate</option>
                            <option value="social">social</option>
                            <option value="others">others</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <label class="form-label" for="description">Description</label>
                        <textarea id="description" class="form-input" placeholder="Describe your video" required></textarea>
                    </div>

                    <div class="form-group">
                        <label class="form-label" for="tags">Tags</label>
                        <div class="form-input tags-input" id="tagsContainer">
                            <input type="text" id="tagInput" placeholder="Add tags and press Enter" style="border: none; background: none; outline: none;">
                        </div>
                    </div>

                    <button type="submit" class="submit-btn">Upload Video</button>
                </div>
            </div>
        </form>
    </div>

    <script>
        // File Upload Handling
        const dropZone = document.getElementById('dropZone');
        const fileInput = document.getElementById('fileInput');
        const videoPreview = document.getElementById('videoPreview');

        dropZone.addEventListener('click', () => fileInput.click());

        ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
            dropZone.addEventListener(eventName, preventDefaults, false);
        });

        function preventDefaults(e) {
            e.preventDefault();
            e.stopPropagation();
        }

        ['dragenter', 'dragover'].forEach(eventName => {
            dropZone.addEventListener(eventName, () => {
                dropZone.classList.add('dragover');
            });
        });

        ['dragleave', 'drop'].forEach(eventName => {
            dropZone.addEventListener(eventName, () => {
                dropZone.classList.remove('dragover');
            });
        });

        dropZone.addEventListener('drop', handleDrop);
        fileInput.addEventListener('change', (e) => handleFiles(e.target.files));

        function handleDrop(e) {
            const dt = e.dataTransfer;
            const files = dt.files;
            handleFiles(files);
        }

        function handleFiles(files) {
            if (files[0] && files[0].type.startsWith('video/')) {
                console.log('Video file selected:', files[0].name);
                videoPreview.textContent = `Selected: ${files[0].name}`;
                videoPreview.classList.add('active');
            } else {
                alert('Please upload a video file');
            }
        }

        // Tags Handling
        const tagsContainer = document.getElementById('tagsContainer');
        const tagInput = document.getElementById('tagInput');
        let tags = [];

        tagInput.addEventListener('keydown', (e) => {
            if (e.key === 'Enter') {
                e.preventDefault();
                const tag = tagInput.value.trim();
                if (tag && !tags.includes(tag)) {
                    addTag(tag);
                    tagInput.value = '';
                }
            }
        });

        function addTag(tag) {
            tags.push(tag);
            const tagElement = document.createElement('span');
            tagElement.classList.add('tag');
            tagElement.innerHTML = `
                ${tag}
                <span class="tag-remove" onclick="removeTag('${tag}')">√ó</span>
            `;
            tagsContainer.insertBefore(tagElement, tagInput);
        }

        function removeTag(tag) {
            tags = tags.filter(t => t !== tag);
            renderTags();
        }

        function renderTags() {
            tagsContainer.innerHTML = '';
            tags.forEach(tag => {
                const tagElement = document.createElement('span');
                tagElement.classList.add('tag');
                tagElement.innerHTML = `
                    ${tag}
                    <span class="tag-remove" onclick="removeTag('${tag}')">√ó</span>
                `;
                tagsContainer.appendChild(tagElement);
            });
            tagsContainer.appendChild(tagInput);
        }

        // Form Submission
        document.getElementById('uploadForm').addEventListener('submit', (e) => {
            e.preventDefault();
            // Handle form submission here
            console.log({
                title: document.getElementById('title').value,
                price: document.getElementById('price').value,
                type: document.getElementById('type').value,
                description: document.getElementById('description').value,
                tags: tags
            });
        });
    </script>
</body>
</html>

    <!-- <script>
        // Tags handling
        const tagsContainer = document.getElementById('tagsContainer');
        const tagInput = document.getElementById('tagInput');
        let tags = [];

        tagInput.addEventListener('keydown', (e) => {
            if (e.key === 'Enter') {
                e.preventDefault();
                const tag = tagInput.value.trim();
                if (tag && !tags.includes(tag)) {
                    tags.push(tag);
                    renderTags();
                }
                tagInput.value = '';
            }
        });

        function renderTags() {
            const tagsHTML = tags.map(tag => `
                <div class="tag">
                    <span>${tag}</span>
                    <button type="button" onclick="removeTag('${tag}')">√ó</button>
                </div>
            `).join('');
            tagsContainer.innerHTML = tagsHTML + `<input type="text" id="tagInput" placeholder="Add tags and press Enter">`;
            tagInput = document.getElementById('tagInput');
        }

        function removeTag(tag) {
            tags = tags.filter(t => t !== tag);
            renderTags();
        }

        // File upload handling
        const dropZone = document.getElementById('dropZone');
        const fileInput = document.getElementById('fileInput');
        const fileInfo = document.getElementById('fileInfo');
        const fileName = document.getElementById('fileName');
        const progress = document.getElementById('progress');

        dropZone.addEventListener('click', () => fileInput.click());

        dropZone.addEventListener('dragover', (e) => {
            e.preventDefault();
            dropZone.classList.add('dragover');
        });

        dropZone.addEventListener('dragleave', () => {
            dropZone.classList.remove('dragover');
        });

        dropZone.addEventListener('drop', (e) => {
            e.preventDefault();
            dropZone.classList.remove('dragover');
            const file = e.dataTransfer.files[0];
            if (file && file.type.startsWith('video/')) {
                handleFile(file);
            }
        });

        fileInput.addEventListener('change', () => {
            if (fileInput.files.length) {
                handleFile(fileInput.files[0]);
            }
        });

        function handleFile(file) {
            fileName.textContent = file.name;
            fileInfo.classList.add('visible');
            simulateUpload();
        }

        function simulateUpload() {
            let width = 0;
            const interval = setInterval(() => {
                if (width >= 100) {
                    clearInterval(interval);
                } else {
                    width++;
                    progress.style.width = width + '%';
                }
            }, 50);
        }

        // Form submission
        document.getElementById('uploadForm').addEventListener('submit', async (e) => {
    e.preventDefault();

    // Create FormData object
    const formData = new FormData();
    formData.append('title', document.getElementById('title').value);
    formData.append('price', document.getElementById('price').value);
    // formData.append('type', document.getElementById('type').value);
    formData.append('category', document.getElementById('type').value);
    formData.append('description', document.getElementById('description').value);
    formData.append('tags', JSON.stringify(tags)); // Assuming `tags` is an array
    formData.append('file', document.getElementById('fileInput').files[0]); // Add file

    // Call the async function to upload
    sendFileData(formData);
    alert('Video upload initiated!');
});

async function sendFileData(formData) {
    try {
        const response = await fetch('/upload', {
            method: 'POST',
            body: formData // Pass the FormData object directly
        });

        if (response.ok) {
            const result = await response.json();
            alert(`File uploaded successfully: ${result.message}`);
            if (response.status === 201) {
                window.location.href = '/userve';
            }
        } else {
            console.error('Failed to upload file');
            alert('File upload failed.');
        }
    } catch (error) {
        console.error('Error:', error);
        alert('An error occurred during upload.');
    }
}

    </script> -->
</body>
</html>